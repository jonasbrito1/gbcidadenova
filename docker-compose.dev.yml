version: "3.8"

services:
  # PostgreSQL para desenvolvimento
  gb-postgres:
    image: postgres:15-alpine
    container_name: gb-postgres-dev
    environment:
      POSTGRES_DB: gb_sistema
      POSTGRES_USER: gb_user
      POSTGRES_PASSWORD: gb_dev_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/logs:/var/log/postgresql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gb_user -d gb_sistema"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: |
      postgres 
      -c log_statement=all 
      -c log_destination=stderr 
      -c log_line_prefix='%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
      -c log_min_duration_statement=0
      -c log_checkpoints=on
      -c log_connections=on
      -c log_disconnections=on

  # Redis para cache
  gb-redis:
    image: redis:7-alpine
    container_name: gb-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --appendfsync everysec

  # pgAdmin para interface visual
  gb-pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gb-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@graciebarra.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    ports:
      - "8080:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
      - ./docker/pgadmin-servers.json:/pgadmin4/servers.json
    depends_on:
      gb-postgres:
        condition: service_healthy
    restart: unless-stopped

  # Mailpit para testar emails
  gb-mailpit:
    image: axllent/mailpit:latest
    container_name: gb-mailpit-dev
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web interface
    restart: unless-stopped

  # Minio para storage de arquivos (S3 compatible)
  gb-minio:
    image: minio/minio:latest
    container_name: gb-minio-dev
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_dev_data:/data
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local
  minio_dev_data:
    driver: local

networks:
  default:
    name: gb-dev-network
